{"version":3,"file":"loader.js","sourceRoot":"","sources":["../../src/translations/loader.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,EAAE,EAAE,MAAM,SAAS,CAAC;AAC7B,OAAO,EAAE,EAAE,EAAE,MAAM,SAAS,CAAC;AAE7B,MAAM,CAAC,MAAM,SAAS,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AAcpC,MAAM,CAAC,KAAK,UAAU,MAAM,CAAC,IAAY;IACvC,IAAI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC;QAAE,OAAO,SAAS,CAAC,IAAgB,CAAC,CAAC;;QACzE,OAAO,EAAE,CAAC;AACjB,CAAC","sourcesContent":["import { de } from './de.js';\nimport { en } from './en.js';\nimport { Language } from '@openscd/core/dist/foundation/deprecated/settings';\nexport const languages = { en, de };\n\n/**\n * Recursive type for translations that can have nested sections\n */\nexport type TranslationValue = string | { [key: string]: TranslationValue };\n\n/**\n * Type definition for translation collections\n */\nexport type Translations = {\n  [section: string]: TranslationValue;\n};\n\nexport async function loader(lang: string): Promise<Translations> {\n  if (Object.keys(languages).includes(lang)) return languages[lang as Language];\n  else return {};\n}\n"]}