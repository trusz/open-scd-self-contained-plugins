{"version":3,"file":"wizard-mixin.js","sourceRoot":"","sources":["../src/wizard-mixin.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAkB,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,aAAa,CAAC;AAM7E,OAAO,wCAAwC,CAAC;AAEhD;;;GAGG;AACH,MAAM,OAAO,WAAY,SAAQ,UAAU;IAA3C;;QACE,8CAA8C;QAE9C,aAAQ,GAAoB,EAAE,CAAC;QAsBvB,aAAQ,GAAG,KAAK,EAAE,EAAe,EAAE,EAAE;YAC3C,EAAE,CAAC,wBAAwB,EAAE,CAAC;YAC9B,EAAE,CAAC,eAAe,EAAE,CAAC;YAErB,MAAM,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC;YAChC,IAAI,MAAM,KAAK,IAAI,EAAE,CAAC;gBACpB,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;YACxB,CAAC;iBAAM,IAAI,EAAE,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;gBAC/B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAChC,CAAC;iBAAM,CAAC;gBACN,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC7B,CAAC;YAED,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;YAE/B,MAAM,IAAI,CAAC,cAAc,CAAC;YAC1B,MAAM,IAAI,CAAC,QAAQ,EAAE,cAAc,CAAC;YACpC,MAAM,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,cAAc,CAAC;YAC3C,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,EAAE,CAAC;YAE9B,iCAAiC;YACjC,6CAA6C;YAC7C,uDAAuD;YACvD,uCAAuC;YACvC,QAAQ;YACR,MAAM;YACN,KAAK;QACP,CAAC,CAAC;QAEM,mBAAc,GAAG,GAAG,EAAE;YAC5B,IAAI,CAAC,QAAQ,EAAE,aAAa,EAAE,CAAC;QACjC,CAAC,CAAC;IACJ,CAAC;IAlDW,kBAAkB;QAC1B,OAAO,IAAI,CAAA;+BACgB,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE;KACpD,CAAC;IACJ,CAAC;IAED,iBAAiB;QACf,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC/C,IAAI,CAAC,gBAAgB,CAAC,eAAe,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;IAC9D,CAAC;IAED,oBAAoB;QAClB,KAAK,CAAC,oBAAoB,EAAE,CAAC;QAC7B,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAClD,IAAI,CAAC,mBAAmB,CAAC,eAAe,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;IACjE,CAAC;CAkCF;AAtDC;IADC,KAAK,EAAE;6CACuB;AAEP;IAAvB,KAAK,CAAC,eAAe,CAAC;6CAAyB","sourcesContent":["import { LitElement, TemplateResult, html, state, query } from 'lit-element';\nimport {\n  WizardEvent,\n  WizardFactory,\n} from '@openscd/open-scd/src/foundation.js';\nimport { WizardDialog } from '@openscd/open-scd/src/wizard-dialog.js';\nimport '@openscd/open-scd/src/wizard-dialog.js';\n\n/**\n * Base class for plugins that manage their own wizards\n * without depending on oscd-wizard\n */\nexport class WizardMixin extends LitElement {\n  /** FIFO queue of [[`Wizard`]]s to display. */\n  @state()\n  workflow: WizardFactory[] = [];\n\n  @query('wizard-dialog') wizardUI!: WizardDialog;\n\n  protected renderWizardDialog(): TemplateResult {\n    return html`\n      <wizard-dialog .wizard=${this.workflow[0]?.() ?? []}></wizard-dialog>\n    `;\n  }\n\n  connectedCallback(): void {\n    super.connectedCallback();\n    this.addEventListener('wizard', this.onWizard);\n    this.addEventListener('editor-action', this.onEditorAction);\n  }\n\n  disconnectedCallback(): void {\n    super.disconnectedCallback();\n    this.removeEventListener('wizard', this.onWizard);\n    this.removeEventListener('editor-action', this.onEditorAction);\n  }\n\n  private onWizard = async (we: WizardEvent) => {\n    we.stopImmediatePropagation();\n    we.stopPropagation();\n\n    const wizard = we.detail.wizard;\n    if (wizard === null) {\n      this.workflow.shift();\n    } else if (we.detail.subwizard) {\n      this.workflow.unshift(wizard);\n    } else {\n      this.workflow.push(wizard);\n    }\n\n    this.requestUpdate('workflow');\n\n    await this.updateComplete;\n    await this.wizardUI?.updateComplete;\n    await this.wizardUI.dialog?.updateComplete;\n    this.wizardUI.dialog?.focus();\n\n    // this.updateComplete.then(() =>\n    //   this.wizardUI?.updateComplete.then(() =>\n    //     this.wizardUI?.dialog?.updateComplete.then(() =>\n    //       this.wizardUI?.dialog?.focus()\n    //     )\n    //   )\n    // );\n  };\n\n  private onEditorAction = () => {\n    this.wizardUI?.requestUpdate();\n  };\n}\n"]}