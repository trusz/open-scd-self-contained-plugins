{"version":3,"file":"directDialogMixin.js","sourceRoot":"","sources":["../src/directDialogMixin.ts"],"names":[],"mappings":";AAAA,OAAO,EACL,UAAU,EAEV,IAAI,EACJ,KAAK,EACL,KAAK,GACN,MAAM,aAAa,CAAC;AAGrB,OAAO,wCAAwC,CAAC;AAEhD;;;GAGG;AACH,MAAM,OAAO,iBAAkB,SAAQ,UAAU;IAAjD;;QACE,8CAA8C;QAE9C,aAAQ,GAAoB,EAAE,CAAC;IAuCjC,CAAC;IAnCC;;OAEG;IACK,QAAQ,CAAC,EAAe;QAC9B,MAAM,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC;QAChC,IAAI,MAAM,KAAK,IAAI;YAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;aACtC,IAAI,EAAE,CAAC,MAAM,CAAC,SAAS;YAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;;YACvD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAChC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QAC/B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,CAC5B,IAAI,CAAC,QAAQ,EAAE,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,CACtC,IAAI,CAAC,QAAQ,EAAE,MAAM,EAAE,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,CAC9C,IAAI,CAAC,QAAQ,EAAE,MAAM,EAAE,KAAK,EAAE,CAC/B,CACF,CACF,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,iBAAiB;QACf,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC1D,IAAI,CAAC,gBAAgB,CAAC,eAAe,EAAE,GAAG,EAAE,CAC1C,IAAI,CAAC,QAAQ,EAAE,aAAa,EAAE,CAC/B,CAAC;IACJ,CAAC;IAED;;OAEG;IACO,kBAAkB;QAC1B,OAAO,IAAI,CAAA,0BAA0B,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,mBAAmB,CAAC;IACrF,CAAC;CACF;AAvCC;IADC,KAAK,EAAE;mDACuB;AAEP;IAAvB,KAAK,CAAC,eAAe,CAAC;mDAAyB","sourcesContent":["import {\n  LitElement,\n  TemplateResult,\n  html,\n  state,\n  query,\n} from 'lit-element';\nimport { WizardEvent, WizardFactory } from '@openscd/open-scd/src/foundation.js';\nimport { WizardDialog } from '@openscd/open-scd/src/wizard-dialog.js';\nimport '@openscd/open-scd/src/wizard-dialog.js';\n\n/**\n * Base class for plugins that manage their own dialogs directly\n * without depending on oscd-wizard\n */\nexport class DirectDialogMixin extends LitElement {\n  /** FIFO queue of [[`Wizard`]]s to display. */\n  @state()\n  workflow: WizardFactory[] = [];\n\n  @query('wizard-dialog') wizardUI!: WizardDialog;\n\n  /**\n   * Handles wizard events by adding or removing wizards from the workflow\n   */\n  private onWizard(we: WizardEvent) {\n    const wizard = we.detail.wizard;\n    if (wizard === null) this.workflow.shift();\n    else if (we.detail.subwizard) this.workflow.unshift(wizard);\n    else this.workflow.push(wizard);\n    this.requestUpdate('workflow');\n    this.updateComplete.then(() =>\n      this.wizardUI?.updateComplete.then(() =>\n        this.wizardUI?.dialog?.updateComplete.then(() =>\n          this.wizardUI?.dialog?.focus()\n        )\n      )\n    );\n  }\n\n  /**\n   * Add event listeners for wizard events and editor actions\n   */\n  connectedCallback(): void {\n    super.connectedCallback();\n    this.addEventListener('wizard', this.onWizard.bind(this));\n    this.addEventListener('editor-action', () =>\n      this.wizardUI?.requestUpdate()\n    );\n  }\n\n  /**\n   * Renders the wizard dialog component\n   */\n  protected renderWizardDialog(): TemplateResult {\n    return html`<wizard-dialog .wizard=${this.workflow[0]?.() ?? []}></wizard-dialog>`;\n  }\n}\n"]}